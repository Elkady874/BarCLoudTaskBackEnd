// <auto-generated />
using System;
using BarCLoudTaskBackEnd.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarCLoudTaskBackEnd.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240524030511_fixNameLength")]
    partial class fixNameLength
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarCLoudTaskBackEnd.Entities.BarCloudUserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("BarCloudUser");
                });

            modelBuilder.Entity("BarCLoudTaskBackEnd.Entities.StockAggregateEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ClosePrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HighestPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("LowestPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("NumberOfTransactions")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<decimal>("OpenPrice")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StartOfTheAggregateWindow")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<decimal>("TradingVolume")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("otc")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockAggregate");
                });

            modelBuilder.Entity("BarCLoudTaskBackEnd.Entities.StockEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("Ticker")
                        .IsUnique();

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("BarCloudUserEntityStockEntity", b =>
                {
                    b.Property<int>("RegisteredStockId")
                        .HasColumnType("int");

                    b.Property<int>("SubscribedUsersId")
                        .HasColumnType("int");

                    b.HasKey("RegisteredStockId", "SubscribedUsersId");

                    b.HasIndex("SubscribedUsersId");

                    b.ToTable("BarCloudUserEntityStockEntity");
                });

            modelBuilder.Entity("BarCLoudTaskBackEnd.Entities.StockAggregateEntity", b =>
                {
                    b.HasOne("BarCLoudTaskBackEnd.Entities.StockEntity", "Stock")
                        .WithMany("StockAggregate")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("BarCloudUserEntityStockEntity", b =>
                {
                    b.HasOne("BarCLoudTaskBackEnd.Entities.StockEntity", null)
                        .WithMany()
                        .HasForeignKey("RegisteredStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarCLoudTaskBackEnd.Entities.BarCloudUserEntity", null)
                        .WithMany()
                        .HasForeignKey("SubscribedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BarCLoudTaskBackEnd.Entities.StockEntity", b =>
                {
                    b.Navigation("StockAggregate");
                });
#pragma warning restore 612, 618
        }
    }
}
